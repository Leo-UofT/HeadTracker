; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
    description = "Head Tracker"
    default_envs = Head_Tracker-Nano33_BLE
#    default_envs = Head_Tracker-DTQSys
#    default_envs = Head_Tracker-Nano33_BLE_Sense2

[common]
    build_flags =
     -Isrc/include
     !python git_rev_macro.py

[espcommon]
  build_src_filter =
    ${env.build_src_filter}
    +<targets/esp32/*>

[nrf52common]
  build_src_filter =
    ${env.build_src_filter}
    +<targets/nrf52/*>

[env]
    monitor_speed = 115200
    monitor_port = COM6
    debug_build_flags = -O1 -g -ggdb -DDEBUG=y
    extra_scripts = pre:extra_script.py
    build_src_filter = +<*> -<.git/> -<.svn/> -<targets/*>

# Zephyr OS + Arduino Nano33BLE
[env:Head_Tracker-Nano33_BLE]
    extends = nrf52common
    platform = nordicnrf52@9.4
    board = arduino_nano_33_ble
    framework = zephyr
    lib_deps = bblanchon/ArduinoJson@6.20
    debug_tool = jlink
    build_flags =
      ${common.build_flags}
      -DPCB_NANO33BLE=y
      -DFNAME=BLE

# Zephyr OS + Arduino Nano33BLE Sense Rev2
[env:Head_Tracker-Nano33_BLE_Sense2]
    extends = nrf52common
    platform = nordicnrf52@9.4
    board = arduino_nano_33_ble
    framework = zephyr
    lib_deps = bblanchon/ArduinoJson@6.20
    debug_tool = jlink
    build_flags =
      ${common.build_flags}
      -DPCB_NANO33BLE_SENSE2=y
      -DFNAME=BLE

# Zephyr OS + DTQSys HT Board
[env:Head_Tracker-DTQSys]
    extends = nrf52common
    platform = nordicnrf52@9.4
    board = dtqsys_ht
    framework = zephyr
    lib_deps = bblanchon/ArduinoJson@6.20
    debug_tool = jlink
    build_flags =
      ${common.build_flags}
      -DPCB_DTQSYS=y
      -DFNAME=DTQ

# ESP32 Build on Node32S
#[env:Head_Tracker-ESP32-Node32s]
#    extends = espcommon
#    platform = espressif32
#    board = Node32s
#    framework = espidf
#    upload_protocol = esptool
#    build_unflags = -Werror=all
#    board_build.partitions = partitions.csv
#    build_flags =
#      ${common.build_flags}
#      -DRTOS_FREERTOS=y
#      -DPCB_ESP32PICO=y



